// 概念構想

# 詳細記述用
microcms-document-mcp-server/
├── src/ # ソースコード
│   ├── index.ts                    # MCPサーバーメイン
|   |                               # サーバの設定や初期化、Tool,Agentの登録など、src内で設定した機能が動作するように
│   ├── learning/                   # 学習システム
│   │   ├── agents/  # 学習エージェント
│   │   │   ├── learning-agent.ts   # ユーザの学習を管理
│   │   │   ├── progress-agent.ts   # ユーザの進捗を管理
│   │   │   └── assessment-agent.ts # ユーザの評価を管理(なしで実装予定)
│   │   ├── tool/  # ツール
│   │   │   ├── document-tools.ts # 学習コンテンツや既存ドキュメントの確認、検索
│   │   │   └── learning-tools.ts # 学習ツール
│   │   ├── workflows/  # 学習ワークフロー
│   │   │   ├── stage-workflow.ts # 学習段階の管理
│   │   │   ├── assessment-workflow.ts # 評価ワークフロー(なしで実装)
│   │   │   └── progression-workflow.ts # 進捗ワークフロー
│   │   ├── storage/  # ファイルシステム管理
│   │   │   ├── progress-storage.ts  # 学習進捗の管理、進捗はconfig内で設定したデータを管理
│   │   │   ├── user-data-storage.ts # ユーザデータの管理
│   │   │   └── learning-history.ts # 学習履歴の管理
│   │   ├── content/               # 学習内容管理
│   │   │   ├── content-loader.ts  # 学習内容の読み込み
│   │   │   ├── content-validator.ts # 出力（学習内容）が適切か判断
│   │   │   ├── content-cache.ts # 学習内容のキャッシュ
│   │   │   └── content-sync.ts # 学習内容の同期
│   │   └── coordination/          # エージェント間調整
│   │       ├── workflow-coordinator.ts
│   │       └── data-sync.ts
│   ├── mcp-tools/                 # MCPツール実装
│   │   ├── document-tools.ts      # 既存ドキュメントツール
│   │   └── learning-tools.ts      # 学習ツール
│   └── types/                     # 型定義
│       ├── learning-types.ts
│       ├── mcp-types.ts
│       └── common-types.ts
├── config/                         # 学習コンテンツ
│   └── learning/
|        ├── learning-stages.json          # 学習段階の定義
|        ├── stage-content.json            # 各段階の詳細内容（概要的な）
|        ├── learning-paths.json           # 学習パスの定義
|        ├── user-profiles.json            # ユーザープロファイルのテンプレート
|        ├── assessment-criteria.json      # 評価基準の定義(なしで実装予定)
|        ├── milestones.json               # マイルストーンの定義(なしで実装予定)
|        └── stages/                       # 実際の学習コンテンツ
|            ├── stage-1-basics/ # 初級ステージ
|            │   ├── content.md            # 学習内容（Markdown）（各ステップの詳細な学習内容）
|            │   ├── exercises.json        # 演習問題
|            │   ├── metadata.json         # ステージのメタデータ
|            │   └── resources/            # 追加リソース
|            │       ├── images/
|            │       ├── code-examples/
|            │       └── external-links.json
|            |── stage-2-intermediate/ # 中級ステージ
|            |    ├── content.md
|            |    ├── exercises.json
|            |    ├── metadata.json
|            |    └── resources/
|            ├── glossary.json # 用語集
|            └── references.json # 参考文献
|
├── docs/                           # microCMSドキュメント
│   ├── general.md
│   ├── content-api/
│   ├── management-api/
│   └── image-api/
├── dist/                           # ビルド出力
├── manifest.json                   # MCPサーバー設定
├── package.json                    # プロジェクト設定
|── tsconfig.json                  # TypeScript設定
|── .gitignore
|── node_modules/
|── package-lock.json
└── package.json



├── src/
│   ├── index.ts                    # MCPサーバーメイン
│   ├── learning/                   # 学習システム
│   │   ├── agents/                # 学習エージェント
│   │   │   ├── learning-agent.ts
│   │   │   ├── progress-agent.ts
│   │   │   └── assessment-agent.ts
│   │   ├── workflows/             # 学習ワークフロー
│   │   │   ├── stage-workflow.ts
│   │   │   ├── assessment-workflow.ts
│   │   │   └── progression-workflow.ts
│   │   ├── storage/               # ファイルシステム管理
│   │   │   ├── progress-storage.ts
│   │   │   ├── user-data-storage.ts
│   │   │   └── learning-history.ts
│   │   ├── content/               # 学習内容管理
│   │   │   ├── content-loader.ts
│   │   │   ├── content-validator.ts
│   │   │   ├── content-cache.ts
│   │   │   └── content-sync.ts
│   │   ├── config/                # 学習設定
│   │   │   ├── learning-stages.json
│   │   │   ├── stage-content.json
│   │   │   └── learning-paths.json
│   │   └── coordination/          # エージェント間調整
│   │       ├── workflow-coordinator.ts
│   │       └── data-sync.ts
│   ├── mcp-tools/                 # MCPツール実装
│   │   ├── document-tools.ts      # 既存ドキュメントツール
│   │   └── learning-tools.ts      # 学習ツール
│   └── types/                     # 型定義
│       ├── learning-types.ts
│       ├── mcp-types.ts
│       └── common-types.ts
├── config/                         # 学習コンテンツ
│   └── learning/
│       ├── stages/
│       │   ├── stage-1-basics/
│       │   │   ├── content.md
│       │   │   ├── exercises.json
│       │   │   └── resources/
│       │   └── stage-2-intermediate/
│       └── shared/
│           ├── glossary.json
│           └── references.json
├── docs/                           # microCMSドキュメント
│   ├── general.md
│   ├── content-api/
│   ├── management-api/
│   └── image-api/
├── dist/                           # ビルド出力
├── manifest.json                   # MCPサーバー設定
├── package.json                    # プロジェクト設定
└── tsconfig.json                  # TypeScript設定




src/
├── learning/
│   ├── agents/          # 学習エージェント
│   │   ├── learning-agent.ts
│   │   ├── progress-agent.ts
│   │   └── assessment-agent.ts
│   ├── workflows/       # 学習ワークフロー
│   │   ├── stage-workflow.ts
│   │   ├── assessment-workflow.ts
│   │   └── progression-workflow.ts
│   ├── storage/         # ファイルシステム管理
│   │   ├── progress-storage.ts # 
│   │   ├── user-data-storage.ts
│   │   └── learning-history.ts
│   ├── content/         # �� 学習内容管理（新規追加）
│   │   ├── content-loader.ts
│   │   ├── content-validator.ts
│   │   ├── content-cache.ts
│   │   └── content-sync.ts
│   ├── config/          # �� 学習設定（新規追加）
│   │   ├── learning-stages.json
│   │   ├── stage-content.json
│   │   └── learning-paths.json
│   └── coordination/    # エージェント間の調整
│       ├── workflow-coordinator.ts
│       └── data-sync.ts
